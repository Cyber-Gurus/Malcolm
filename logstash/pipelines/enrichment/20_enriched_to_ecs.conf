filter {

  # Map enriched fields to ECS where possible (see https://github.com/idaholab/Malcolm/issues/16)
  # For now I will add fields rather than rename them. This will preserve backwards compatibility
  # but the records will be somewhat bigger. I'll have to address what (if anything) to do with upgrades.

  # for now don't do anything unles an env explicitly enables it
  mutate {
    id => "mutate_add_field_env_logstash_enriched_to_ecs"
    add_field => { "[@metadata][ENV_LOGSTASH_ENRICHED_TO_ECS]" => "${LOGSTASH_TO_ECS:false}" }
  }
  if ([@metadata][ENV_LOGSTASH_ENRICHED_TO_ECS] == "true") {

    # 🗹 Network - Fields describing the communication path over which the event happened. - https://www.elastic.co/guide/en/ecs/current/ecs-network.html

    # network.direction (from tags assigned during 11_lookups.conf)
    if ("internal_source" in [tags]) and ("internal_destination" in [tags]) {
      mutate { id => "mutate_add_field_metadata_network_direction_internal"
               add_field => { "[@metadata][network_direction]" => "internal" } }
    } else if ("external_source" in [tags]) and ("external_destination" in [tags]) {
      mutate { id => "mutate_add_field_metadata_network_direction_external"
               add_field => { "[@metadata][network_direction]" => "external" } }
    } else if ("internal_source" in [tags]) and ("external_destination" in [tags]) {
      mutate { id => "mutate_add_field_metadata_network_direction_outbound"
               add_field => { "[@metadata][network_direction]" => "outbound" } }
    } else if ("external_source" in [tags]) and ("internal_destination" in [tags]) {
      mutate { id => "mutate_add_field_metadata_network_direction_inbound"
               add_field => { "[@metadata][network_direction]" => "inbound" } }
    }
    if ([@metadata][network_direction]) {
      mutate { id => "mutate_add_field_ecs_network_direction"
               add_field => { "[network][direction]" => "%{[@metadata][network_direction]}" } }
    }

    # network.name (based on info from [zeek][resp_segment] and [zeek][orig_segment])
    if ([zeek][resp_segment]) { mutate { id => "mutate_add_field_ecs_network_name_resp"
                                         merge => { "[network][name]" => "[zeek][resp_segment]" } } }
    if ([zeek][orig_segment]) { mutate { id => "mutate_add_field_ecs_network_name_orig"
                                         merge => { "[network][name]" => "[zeek][orig_segment]" } } }

    # Autonomous System and Geo are handled after enrichment in 20_enriched_to_ecs.conf
    # ☐ Autonomous System - Fields describing an Autonomous System (Internet routing prefix). - https://www.elastic.co/guide/en/ecs/current/ecs-as.html
    # ☐ Geo - Fields describing a location. - https://www.elastic.co/guide/en/ecs/current/ecs-geo.html

    # ecs.version is required in all events - https://www.elastic.co/guide/en/ecs/current/ecs-ecs.html
    if (![ecs][version]) { mutate { id => "mutate_add_field_ecs_version"
                                    add_field => { "[ecs][version]" => "1.5.0" } } }

    # event.ingested
    if (![event][ingested]) {
      ruby {
        id => "ruby_event_ingested_now_zeek"
        init => "require 'time'"
        code => "event.set('[event][ingested]', Time.now.to_f)"
      }
      date {
        id => "date_event_ingested_conv"
        match => [ "[event][ingested]", "UNIX" ]
        target => "[event][ingested]"
      }
    }

    # event.provider
    if (![event][provider]) { mutate { id => "mutate_add_field_event_provider_enrichment"
                                       add_field => { "[event][provider]" => "malcolm" } } }

  } # end if ENV_LOGSTASH_ENRICHED_TO_ECS

}